tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://cloudify.co/spec/cloudify/5.0.5/types.yaml
  - plugin:cloudify-openstack-plugin?version=>=3.2.9
  - plugin:cloudify-utilities-plugin?version=>=1.14.0


dsl_definitions:

  client_config: &client_config
    username: { get_secret: openstack_username }
    password: { get_secret: openstack_password }
    project_name: { get_input: openstack_tenant }
    auth_url: { get_secret: openstack_auth_url }
    region_name: { get_secret: openstack_region }
    user_domain_name: { get_secret: openstack_user_domain }
    project_domain_name: { get_secret: openstack_project_domain }


inputs:

  image_id:
    description: >
      ID of the server image.
    type: string

  flavor_id:
    description: >
      ID of the server flavor.
    type: string

  resource_deployment:
    description: >
      Resource deployment ID.
    type: string


node_templates:

  shared_resource_node:
    type: cloudify.nodes.SharedResource
    properties:
      client:
          host: 127.0.0.1
          username: vpn_designer1
          password: cloudify123
          tenant: bu_resource_vpn
      resource_config:
        deployment:
          id: { get_input: resource_deployment }

  floating_ip:
    type: cloudify.nodes.openstack.FloatingIP
    properties:
      client_config: *client_config
      resource_config:
        floating_network_id: { get_capability: [resource_deployment, external_network_id] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: resource_deployment

  cloud_config:
    type: cloudify.nodes.CloudInit.CloudConfig

  vm:
    type: cloudify.nodes.openstack.Server
    properties:
      client_config: *client_config
      agent_config:
        install_method: none
      resource_config:
        name: webserver
        image_id: { get_input: image_id }
        flavor_id: { get_input: flavor_id }
        user_data: { get_attribute: [ cloud_config, cloud_config ] }
    relationships:
    - type: cloudify.relationships.depends_on
      target: cloud_config
    - type: cloudify.relationships.connected_to
      target: network



capabilities:

  private_ip_address:
    description: Private IP address of the HTTP server.
    value: { get_attribute: [vm, ip] }

  floating_ip_address:
    description: Floating IP address of the HTTP server.
    value: { get_attribute: [floating_ip, ip] }

  url:
    description: URL of the HTTP server.
    value:
      concat:
        - http://
        - { get_attribute: [floating_ip, ip] }
        - :80/
